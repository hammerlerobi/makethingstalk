{"version":3,"sources":["components/idle/left.js","components/idle/right.js","components/redux/actions.js","components/idle.js","components/tag.js","components/taglink.js","components/redux/rootReducer.js","components/utilities/websocket.js","components/redux/reduxStore.js","App.js","serviceWorker.js","index.js"],"names":["transition","duration","ease","variants","initial","opacity","delay","y","enter","exit","Left","div","animate","className","flip","Infinity","setOldPage","oldPage","type","testUpload","state","connect","tagCommand","command","dispatch","props","history","useHistory","currentLocation","useLocation","pathname","push","open","scale","rotate","uploaded","tagID","tagName","tagColor","media","upload","style","transform","backgroundColor","IP","window","location","hostname","descriptionText","addMedia","setTimeout","transitino","getUploadParams","meta","url","onChangeStatus","status","console","log","name","maxFiles","multiple","canCancel","inputContent","styles","dropzone","width","height","dropzoneActive","borderColor","p","adjNoun","seed","parseInt","Math","random","initState","join","h","rand","s","l","get_random_color","rootReducer","action","merged","key","undefined","min","max","message","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","App","ws","WebSocket","onopen","onmessage","e","JSON","parse","data","error","Connection","render","exitBeforeEnter","exact","path","component","Idle","TagLink","Boolean","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.10f589e5.chunk.js","sourcesContent":["import React from \"react\";\nimport { motion } from \"framer-motion\";\n\nconst transition = { duration: 0.6, ease: [0.43, 0.13, 0.23, 0.96] };\n\nconst variants = {\n  initial: { opacity: 0, delay: 0, y: 50 },\n  enter: { opacity: 1, y: 0, transition },\n  exit: {\n    opacity: 0,\n    y: 50,\n    transition: transition,\n  },\n};\n\nconst Left = () => {\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"enter\"\n      exit=\"exit\"\n      variants={variants}\n      className=\"col p-0\"\n    >\n      <div className=\"place-tag\">\n        <motion.div\n          initial=\"initial\"\n          animate=\"enter\"\n          exit=\"exit\"\n          variants={{\n            ...variants,\n            initial: { y: -50, opacity: 0, transition: transition },\n            exit: { y: -50, opacity: 0, transition: transition },\n          }}\n          className=\"headline h-40\"\n        >\n          <p>\n            Platziere einen Tag auf der <b>make things talk</b> Box um dein\n            Video damit zu verknüpfen.\n          </p>\n        </motion.div>\n        <div className=\"place-tag-animation h-60\">\n          <div className=\"animation-box\">\n            <motion.div\n              animate={{ y: 50 }}\n              transition={{\n                ease: \"easeInOut\",\n                flip: Infinity,\n                duration: 6,\n              }}\n              className=\"animation-tag\"\n            ></motion.div>\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default Left;\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\n\nconst transition = { duration: 1, ease: [0.43, 0.13, 0.23, 0.96] };\n\nconst variants = {\n  initial: { opacity: 0, delay: 0, y: -50 },\n  enter: { opacity: 1, y: 0, transition },\n  exit: {\n    opacity: 0,\n    y: -50,\n    transition: { duration: 1, ...transition },\n  },\n};\n\nconst Right = () => {\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"enter\"\n      exit=\"exit\"\n      variants={variants}\n      className=\"col p-0 \"\n    >\n      <div className=\"load-video\">\n        <div className=\"load-video-animation h-60\">\n          <div className=\"animation-player\"></div>\n        </div>\n        <div className=\"headline h-40\">\n          <p>\n            Drag’n’Drop ein Video hier um es <br />\n            als Platzhalter zu definieren.\n          </p>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default Right;\n","export const newTag = (command, media, tagID) => {\n  return {\n    type: \"NEW_TAG\",\n    command: command,\n    media: media,\n    tagID: tagID,\n  };\n};\n\nexport const addMedia = (media) => {\n  return {\n    type: \"ADD_MEDIA\",\n    media: media,\n  };\n};\n\nexport const addTagName = (tagName) => {\n  return {\n    type: \"ADD_TAG_NAME\",\n    tagName: tagName,\n  };\n};\nexport const addTagColor = (tagColor) => {\n  return {\n    type: \"ADD_TAG_COLOR\",\n    tagColor: tagColor,\n  };\n};\n\nexport const setOldPage = (oldPage) => {\n  return {\n    type: \"SET_OLD_PAGE\",\n    oldPage: oldPage,\n  };\n};\n\nexport const testUpload = (state) => {\n  return {\n    type: \"TEST_UPLOAD\",\n    state: state,\n  };\n};\n\n// TESTING DISPATCHES\n// {\n// \ttype: 'NEW_TAG',\n// \tcommand: \"NewTag\",\n// \ttagID: \"#123456456\",\n// \tmedia: \"test.mp4\",\n// \t}\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport Left from \"./idle/left\";\nimport Right from \"./idle/right\";\nimport { connect } from \"react-redux\";\nimport { setOldPage } from \"../components/redux/actions\";\n\nconst Idle = (props) => {\n  let history = useHistory();\n  let currentLocation = useLocation().pathname;\n  //navigation to upload screen if tag has been detected\n  if (props.tagCommand === \"NewTAG\" && props.oldPage !== currentLocation) {\n    props.setOldPage(currentLocation);\n    history.push(\"/taglink\");\n  }\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0, transition: { duration: 0.75 } }}\n      className=\"container-fluid p-0\"\n    >\n      <div className=\"row vh-100 p0 m-0 gradient-bg\">\n        <Left></Left>\n        {/* <Right></Right>*/}\n      </div>\n    </motion.div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    tagCommand: state.command,\n    oldPage: state.oldPage,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setOldPage: (oldPage) => {\n      dispatch(setOldPage(oldPage));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Idle);\n","import React from \"react\";\nimport { motion } from \"framer\";\nimport { connect } from \"react-redux\";\n\nconst transition = {\n  ease: \"backOut\",\n  duration: 0.8,\n};\nconst variants = {\n  open: { scale: [0, 1], opacity: [0, 1], rotate: [-40, 0], ...transition },\n  uploaded: { scale: [1, 1.3, 1], rotate: [0, 10, 0], ...transition },\n};\n\nconst Tag = (props) => {\n  return (\n    <motion.div\n      animate={props.upload === false ? \"uploaded\" : \"open\"}\n      variants={variants}\n      transition={{\n        ease: \"backOut\",\n        duration: 0.8,\n      }}\n      className=\"tag d-flex flex-column justify-content-center align-items-center\"\n    >\n      <div\n        className=\"upload-progress\"\n        style={{\n          transform: \"scaleY(\" + props.scale + \")\",\n          backgroundColor: props.tagColor,\n        }}\n      ></div>\n\n      <h2>{props.tagName}</h2>\n      <h5>{props.tagID}</h5>\n      {props.media ? <h5>{props.media}</h5> : \"\"}\n    </motion.div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  tagID: state.tagID,\n  tagName: state.tagName,\n  tagColor: state.tagColor,\n  media: state.media,\n  upload: state.upload,\n});\n\nexport default connect(mapStateToProps)(Tag);\n","import React from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setOldPage, addMedia, testUpload } from \"../components/redux/actions\";\nimport Dropzone from \"react-dropzone-uploader\";\n\nimport { motion } from \"framer-motion\";\n\nimport Tag from \"./tag\";\nimport \"../styles/upload.scss\";\n\nvar IP = window.location.hostname;\nvar descriptionText = \"\";\nvar files = \"\";\nconst TagLink = (props) => {\n  let history = useHistory();\n  let currentLocation = useLocation().pathname;\n  //navigation to idle screen if tag has been removed\n  if (\n    props.tagCommand === \"Idle\" &&\n    props.oldPage !== currentLocation &&\n    !props.upload\n  ) {\n    history.push(\"/\");\n    props.setOldPage(currentLocation);\n  }\n\n  // DROP ZONE\n  // specify upload params and url for your files\n  const getUploadParams = ({ meta }) => {\n    return { url: \"http://\" + IP + \":4000/api/upload/\" };\n  };\n\n  const handleChangeStatus = ({ meta }, status) => {\n    console.log(status, meta.name);\n  };\n\n  // FEEDBACK FOR ACTIVE\n  // postData(\"http://\" + IP + \":4000/api/tag/link\", {\n  // \ttagId: props.tagID,\n  // \tmediaId: acceptedFiles[0].name,\n  // }).then((data) => {\n  // \tconsole.log(data); // JSON data parsed by `response.json()` call\n  // });\n\n  //UPLOADER TEXT DEBUG WHEN A TAG HAS BEEN REMOVED/DDED\n  switch (props.upload) {\n    case true:\n      descriptionText = \"Video wird hochgeladen ...\";\n      break;\n    case false:\n      descriptionText = \"Das Video wurde erfolgreich verknüpft. \";\n      break;\n    default:\n      descriptionText =\n        \"Klicke auf den Bildschirm oder lege einfach dein Video hier ab um es mit dem Tag zu verknüpfen\";\n      break;\n  }\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0, transitino: { duration: 0.75 } }}\n      className=\"container-fluid p-0\"\n    >\n      {\" \"}\n      <Dropzone\n        getUploadParams={getUploadParams}\n        onChangeStatus={handleChangeStatus}\n        maxFiles={1}\n        multiple={false}\n        canCancel={false}\n        inputContent=\"Drop A File\"\n        styles={{\n          dropzone: { width: 400, height: 200 },\n          dropzoneActive: { borderColor: \"green\" },\n        }}\n      />\n      <div className=\"row vh-100 p0 m-0 bg\">\n        <div className=\"col p-0 d-flex flex-column justify-content-center align-items-center\">\n          <Tag scale={props.upload ? 0 : 1}></Tag>\n          <motion.p\n            animate={{ opacity: [0, 1] }}\n            transition={{\n              duration: 1,\n              delay: 1,\n            }}\n            className=\"headline mt-5\"\n          >\n            {descriptionText}\n          </motion.p>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  tagCommand: state.command,\n  oldPage: state.oldPage,\n  upload: state.upload,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setOldPage: (oldPage) => {\n      dispatch(setOldPage(oldPage));\n    },\n    addMedia: (media) => {\n      dispatch(addMedia(media));\n    },\n    testUpload: () => {\n      dispatch(testUpload(true));\n      setTimeout(() => {\n        dispatch(testUpload(false));\n      }, 5000);\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TagLink);\n\nasync function postData(url = \"\", data = {}) {\n  // Default options are marked with *\n  const response = await fetch(url, {\n    method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n    mode: \"same-origin\", // no-cors, *cors, same-origin\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\", // include, *same-origin, omit\n    headers: {\n      \"Content-Type\": \"application/json\",\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    redirect: \"follow\", // manual, *follow, error\n    referrerPolicy: \"no-referrer\", // no-referrer, *client\n    body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n  });\n}\n","import adjNoun from \"adj-noun\";\nadjNoun.seed(parseInt(Math.random() * 999));\n\nconst initState = {\n  command: \"\",\n  media: null,\n  tagID: \"\",\n  oldPage: null,\n  tagName: adjNoun().join(\" \"),\n  tagColor: get_random_color(),\n  upload: null,\n};\n\nconst rootReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"NEW_TAG\":\n      let merged = {\n        command: action.command,\n        media: action.media,\n        tagID: action.tagID,\n      };\n      //avoid removing empty states\n      for (var key in state) {\n        if (merged[key] === undefined || merged[key] === null)\n          merged[key] = state[key];\n      }\n      return merged;\n\n    case \"ADD_MEDIA\":\n      return { ...state, media: action.media };\n    case \"ADD_TAG_COLOR\":\n      return { ...state, tagColor: action.tagColor };\n    case \"ADD_TAG_NAME\":\n      return { ...state, tagName: action.tagName };\n    case \"SET_OLD_PAGE\":\n      return { ...state, oldPage: action.oldPage };\n    case \"TEST_UPLOAD\":\n      return {\n        ...state,\n        upload: action.state,\n      };\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default rootReducer;\n\n// \"just for fun\"\nfunction rand(min, max) {\n  return parseInt(Math.random() * (max - min + 1), 10) + min;\n}\n\nfunction get_random_color() {\n  var h = rand(1, 360); // color hue between 1 and 360\n  var s = rand(60, 80); // saturation 30-100%\n  var l = rand(45, 55); // lightness 30-70%\n  return \"hsl(\" + h + \",\" + s + \"%,\" + l + \"%)\";\n}\n","import store from \"../redux/reduxStore\";\nimport { newTag, addTagName, addTagColor } from \"../redux/actions\";\n\n// var IP = window.location.hostname;\nvar IP = \"192.168.178.43\";\nvar message;\nexport function Connection() {\n  var ws = new WebSocket(\"ws://\" + IP + \":8090\", [\"soap\", \"xmpp\"]);\n  ws.onopen = () => {\n    console.log(\"CONNECTED TO WS\");\n  };\n  ws.onmessage = (e) => {\n    try {\n      message = JSON.parse(e.data);\n      console.log(\"WS:\", message);\n    } catch (error) {\n      console.error(error);\n    }\n\n    store.dispatch(newTag(message.command, message.media, message.tagID));\n    store.dispatch(addTagColor(message.tagColor));\n    store.dispatch(addTagName(message.tagName));\n  };\n}\n","import rootReducer from \"./rootReducer\";\nimport { createStore } from \"redux\";\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React from \"react\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Idle from \"./components/idle\";\nimport TagLink from \"./components/taglink\";\nimport { Connection } from \"./components/utilities/websocket\";\n\nfunction App() {\n  //connecting to WS\n  Connection();\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Route\n          render={({ location }) => (\n            <AnimatePresence exitBeforeEnter>\n              <Switch location={location} key={location.pathname}>\n                <Route exact path=\"/\" component={Idle} />\n                <Route path=\"/taglink\" component={TagLink} />\n              </Switch>\n            </AnimatePresence>\n          )}\n        />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\n{\n  /* <AnimatePresence exitBeforeEnter initial={false}></AnimatePresence> */\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./components/redux/reduxStore\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}